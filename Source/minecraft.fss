#version 330

in vec2 TexCoords;
in vec3 Normal;
in vec3 FragPos;

uniform sampler2D texture_diffuse1;
uniform vec3 lightPos;
uniform vec3 viewPos;

out vec4 frag_colour;	//final output color used to render the point

void main () {
	vec3 color = texture(texture_diffuse1, TexCoords).rgb;

	//ambient
	vec3 ambient = 0.10*color;

	//diffuse
	vec3 lightDir = normalize(lightPos - FragPos);
	vec3 normal = normalize(Normal);
	float diff = max(dot(lightDir, normal), 0.0);
	vec3 diffuse = diff*color;

	//Specular

	vec3 viewDir = normalize(viewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, normal);

	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 8.0);

	vec3 specular = vec3(0.3) * spec; //assuming bright white light color
	frag_colour = vec4(ambient + diffuse + specular, 1.0f);
}